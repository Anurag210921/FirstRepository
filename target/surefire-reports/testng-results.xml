<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-30T12:09:32 IST" name="Suite" finished-at="2022-09-30T12:11:04 IST" duration-ms="91581">
    <groups>
    </groups>
    <test started-at="2022-09-30T12:09:32 IST" name="Test" finished-at="2022-09-30T12:11:04 IST" duration-ms="91581">
      <class name="Practice.Success.LoginPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Practice.Success.LoginPageTest@5677323c]" started-at="2022-09-30T12:09:33 IST" name="setUp" finished-at="2022-09-30T12:09:47 IST" duration-ms="14277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginPageTitleTest()[pri:1, instance:Practice.Success.LoginPageTest@5677323c]" started-at="2022-09-30T12:09:47 IST" name="loginPageTitleTest" finished-at="2022-09-30T12:09:47 IST" duration-ms="47" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [CRMPR - CRM software for customer relationship management, sales, and support.] but found [CRMPRO - CRM software for customer relationship management, sales, and support.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [CRMPR - CRM software for customer relationship management, sales, and support.] but found [CRMPRO - CRM software for customer relationship management, sales, and support.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at Practice.Success.LoginPageTest.loginPageTitleTest(LoginPageTest.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPageTitleTest -->
        <test-method is-config="true" signature="kill()[pri:0, instance:Practice.Success.LoginPageTest@5677323c]" started-at="2022-09-30T12:09:47 IST" name="kill" finished-at="2022-09-30T12:09:49 IST" duration-ms="2102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- kill -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Practice.Success.LoginPageTest@5677323c]" started-at="2022-09-30T12:09:49 IST" name="setUp" finished-at="2022-09-30T12:09:57 IST" duration-ms="7630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateImageTest()[pri:2, instance:Practice.Success.LoginPageTest@5677323c]" started-at="2022-09-30T12:09:57 IST" name="validateImageTest" finished-at="2022-09-30T12:09:57 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImageTest -->
        <test-method is-config="true" signature="kill()[pri:0, instance:Practice.Success.LoginPageTest@5677323c]" started-at="2022-09-30T12:09:57 IST" name="kill" finished-at="2022-09-30T12:09:57 IST" duration-ms="330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- kill -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Practice.Success.LoginPageTest@5677323c]" started-at="2022-09-30T12:09:57 IST" name="setUp" finished-at="2022-09-30T12:10:07 IST" duration-ms="9181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="LoginTest()[pri:3, instance:Practice.Success.LoginPageTest@5677323c]" started-at="2022-09-30T12:10:07 IST" name="LoginTest" finished-at="2022-09-30T12:10:14 IST" duration-ms="7075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method is-config="true" signature="kill()[pri:0, instance:Practice.Success.LoginPageTest@5677323c]" started-at="2022-09-30T12:10:14 IST" name="kill" finished-at="2022-09-30T12:10:14 IST" duration-ms="306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- kill -->
      </class> <!-- Practice.Success.LoginPageTest -->
      <class name="Practice.Success.LandingPageTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:Practice.Success.LandingPageTest@7d0b7e3c]" started-at="2022-09-30T12:10:14 IST" name="setup" finished-at="2022-09-30T12:10:30 IST" duration-ms="15627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateHomeButtonLink()[pri:1, instance:Practice.Success.LandingPageTest@7d0b7e3c]" started-at="2022-09-30T12:10:30 IST" name="validateHomeButtonLink" finished-at="2022-09-30T12:10:30 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHomeButtonLink -->
        <test-method is-config="true" signature="destroy()[pri:0, instance:Practice.Success.LandingPageTest@7d0b7e3c]" started-at="2022-09-30T12:10:30 IST" name="destroy" finished-at="2022-09-30T12:10:30 IST" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Practice.Success.LandingPageTest@7d0b7e3c]" started-at="2022-09-30T12:10:30 IST" name="setup" finished-at="2022-09-30T12:10:47 IST" duration-ms="16613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getNoOfRows()[pri:2, instance:Practice.Success.LandingPageTest@7d0b7e3c]" started-at="2022-09-30T12:10:47 IST" name="getNoOfRows" finished-at="2022-09-30T12:10:47 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNoOfRows -->
        <test-method is-config="true" signature="destroy()[pri:0, instance:Practice.Success.LandingPageTest@7d0b7e3c]" started-at="2022-09-30T12:10:47 IST" name="destroy" finished-at="2022-09-30T12:10:47 IST" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Practice.Success.LandingPageTest@7d0b7e3c]" started-at="2022-09-30T12:10:47 IST" name="setup" finished-at="2022-09-30T12:11:04 IST" duration-ms="16462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getNoOfColumns()[pri:3, instance:Practice.Success.LandingPageTest@7d0b7e3c]" started-at="2022-09-30T12:11:04 IST" name="getNoOfColumns" finished-at="2022-09-30T12:11:04 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNoOfColumns -->
        <test-method is-config="true" signature="destroy()[pri:0, instance:Practice.Success.LandingPageTest@7d0b7e3c]" started-at="2022-09-30T12:11:04 IST" name="destroy" finished-at="2022-09-30T12:11:04 IST" duration-ms="403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
      </class> <!-- Practice.Success.LandingPageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
